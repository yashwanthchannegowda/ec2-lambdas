service: aws-infra

provider:
  name: aws
  runtime: nodejs10.16
  region: us-east-1
  role: infraLambda
  timeout: 30

plugins:
  - serverless-plugin-optimize

package:
  individually: true
  exclude:
    - ./**


# include all the files/modules directly related to your lambda NOT node_modules
# all necessary node modules will be collected and bundled into one file
# please check that your 'optimized' code still works when launched in production,
# otherwise: to exclude a function from optimisation set 'optimize: false'
# or see plugin docs for more options

functions:
  autoStartEc2:
    description: "Automatically starts all EC2 instances in ALL regions which are tagged appropriately"
    labels: "ec2 auto start manage monitor"
    handler: autoStartEc2/autoStartEc2.handler
    events:
     - schedule: cron(0 21 ? * SUN-THU *)
    package:
      include:
        - autoStartEc2/autoStartEc2.js

  billingReports:
    description: "Delivers latest AWS costs breakdown to your Slack channel"
    labels: "billing report"
    handler: billingReporter/awsBillingReportAnalysis.handler
    events:
     - schedule: cron(0 21 ? * SUN *)
    package:
      include:
        - billingReporter/awsBillingReportAnalysis.js

  autoStopEc2:
    description: "Automatically stops all EC2 instances in ALL regions except excluded ones"
    labels: "ec2 auto stop manage monitor cost saving"
    handler: autoStopEc2/autoStopEc2.handler
    events:
     - schedule: cron(0 10 ? * MON-FRI *)
    package:
      include:
        - autoStopEc2/autoStopEc2.js

  autoStopRds:
    description: "Automatically stops all RDS instances in ALL regions except excluded ones"
    labels: "rds auto stop manage monitor cost saving"
    handler: autoStopRds/autoStopRds.handler
    events:
     - schedule: cron(0 10 ? * MON-FRI *)
    package:
      include:
        - autoStopRds/autoStopRds.js

  blogBot:
    description: "Blog bot"
    handler: blogBot/blogBot.myHandler
    events:
      - schedule: cron(0 19 ? * SUN *)
    package:
      include:
        - blogBot/**

  cleanOrphanVolumes:
    description: "Removes all EC2 volumes in ALL regions, which are not attached to any EC2 instance"
    labels: "ec2 volumes auto clean remove cost saving"
    handler: cleanOrphanVolumes/cleanOrphanVolumes.handler
    events:
     - schedule: cron(0 21 ? * SUN-THU *)
    package:
      include:
        - cleanOrphanVolumes/cleanOrphanVolumes.js

resources:
  Resources:
    infraLambda:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: infraLambda
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole

        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEC2FullAccess
          - arn:aws:iam::aws:policy/AWSLambdaFullAccess
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/CloudWatchFullAccess
          - arn:aws:iam::aws:policy/AmazonSESFullAccess
          - arn:aws:iam::aws:policy/service-role/AmazonSNSRole
          - arn:aws:iam::aws:policy/AmazonSNSFullAccess
          - arn:aws:iam::aws:policy/AmazonRDSFullAccess
          - arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess

        Path: /
